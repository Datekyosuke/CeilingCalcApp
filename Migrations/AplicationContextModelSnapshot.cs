// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiDB.Context;

#nullable disable

namespace CeilingCalc.Migrations
{
    [DbContext(typeof(AplicationContext))]
    partial class AplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CeilingCalc.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<float>("Count")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "count");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "materialId");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "orderId");

                    b.Property<float>("Price")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "price");

                    b.Property<float>("Sum")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "sum");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WebApiDB.Models.Dealer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "city");

                    b.Property<float>("Debts")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "debts");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "lastName");

                    b.Property<long?>("Telephone")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "telephone");

                    b.HasKey("Id");

                    b.ToTable("Dealers");
                });

            modelBuilder.Entity("WebApiDB.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "color");

                    b.Property<float>("Price")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "price");

                    b.Property<float>("Size")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "size");

                    b.Property<string>("Texture")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "texture");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("WebApiDB.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("datetime(6)")
                        .HasAnnotation("Relational:JsonPropertyName", "dateOrder");

                    b.Property<int>("DealerId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "dealerId");

                    b.Property<int>("OperatorId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "operatorId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<float>("Sum")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "sum");

                    b.HasKey("Id");

                    b.HasIndex("DealerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CeilingCalc.Models.OrderDetail", b =>
                {
                    b.HasOne("WebApiDB.Models.Material", "Material")
                        .WithMany("OrderDetail")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiDB.Models.Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebApiDB.Models.Order", b =>
                {
                    b.HasOne("WebApiDB.Models.Dealer", "Dealer")
                        .WithMany("Orders")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("WebApiDB.Models.Dealer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebApiDB.Models.Material", b =>
                {
                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("WebApiDB.Models.Order", b =>
                {
                    b.Navigation("OrderDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
